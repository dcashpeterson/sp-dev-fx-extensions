/* TopNav Spacing */
/* Fonts and Colors */
/**************************************************************************************
 * Top navigation
 * Thanks to blogger Tony Thomas for the css-only menu mojo:
 * https://medialoot.com/blog/how-to-create-a-responsive-navigation-menu-using-only-css
 **************************************************************************************/
.topNav {
  display: flex;
  padding-left: 20px;
  background-color: #757575;
  /*Strip the ul of padding and list styling*/
  /*Create a horizontal list with spacing*/
  /*Style for menu links*/
  /*Hover state for top level links*/
  /*Style for dropdown menu*/
  /*Style for dropdown links*/
  /*Hover state for dropdown links*/
  /*Hide dropdown links until they are needed*/
  /*Make dropdown links vertical*/
  /*Prevent text wrapping*/
  /*Display the dropdown on hover*/
  /*Style 'show menu' label button and hide it by default*/
  /*Hide checkbox*/
  /*Show menu when invisible checkbox is checked*/
  /*Responsive Styles*/
}

.topNav ul {
  list-style-type: none;
  margin: 0;
  padding: 0;
}

.topNav li {
  float: left;
  margin-right: 1px;
}

.topNav li a {
  display: block;
  min-width: 140px;
  height: 30px;
  text-align: center;
  line-height: 30px;
  font-family: "Segoe UI Web (West European)", Segoe UI, -apple-system, BlinkMacSystemFont, Roboto, Helvetica Neue, sans-serif;
  color: white;
  background: #757575;
  text-decoration: none;
}

.topNav li:hover a {
  background: #0078D7;
}

.topNav li:hover ul {
  position: absolute;
  z-index: 50;
}

.topNav li:hover ul a {
  background: #f4f4f4;
  color: black;
  height: 20px;
  line-height: 20px;
}

.topNav li:hover ul a:hover {
  background: #0078D7;
  color: white;
}

.topNav li ul {
  display: none;
}

.topNav li ul li {
  display: block;
  float: none;
}

.topNav li ul li a {
  width: auto;
  min-width: 100px;
  padding: 0 20px;
}

.topNav ul li a:hover + .hidden, .topNav .hidden:hover {
  display: block;
}

.topNav .show-menu {
  font-family: font-family;
  text-decoration: none;
  color: white;
  background: #757575;
  height: 30px;
  display: none;
  margin-bottom: 1px;
}

.topNav .show-menu div .hamburger {
  background-color: #757575;
  height: 24px;
  width: 30px;
  margin: 0 auto;
  padding-top: 6px;
  padding-left: 3px;
  padding-right: 3px;
}

.topNav .show-menu div .hamburger div {
  width: 20px;
  height: 2px;
  background-color: white;
  margin: 3px auto;
}

.topNav input[type=checkbox] {
  display: none;
}

.topNav input[type=checkbox]:checked ~ ul {
  display: block;
}

@media screen and (max-width: 480px) {
  .topNav {
    display: block;
    padding-left: 0;
    /*Make dropdown links appear inline*/
    /*Create vertical spacing*/
    /*Make dropdown menu push the page down*/
    /*Make all menu links full width*/
    /*Display 'show menu' link*/
  }
  .topNav ul {
    position: static;
    display: none;
  }
  .topNav li {
    margin-bottom: 1px;
  }
  .topNav li:hover ul {
    position: relative;
    z-index: 0;
  }
  .topNav ul li, .topNav li a {
    width: 100%;
  }
  .topNav .show-menu {
    display: block;
  }
}

/**************************************************************************************
 * Bottom navigation
 **************************************************************************************/
.bottomNav {
  background-color: #757575;
  color: white;
  font-family: "Segoe UI Web (West European)", Segoe UI, -apple-system, BlinkMacSystemFont, Roboto, Helvetica Neue, sans-serif;
  border-top: 1px;
  border-top-style: solid;
  border-top-color: black;
  padding: 5px 20px;
  display: flex;
  /*Strip the ul of padding*/
  /*Create a horizontal list with spacing*/
  /*Add a bullet in front of every link except the first*/
  /*Style the links*/
}

.bottomNav span {
  flex-grow: 1;
}

.bottomNav ul {
  margin: 0;
  padding: 0;
}

.bottomNav li {
  display: inline-block;
  margin-right: 10px;
}

.bottomNav li:before {
  content: '\2022\00a0\00a0';
}

.bottomNav li:first-child:before {
  content: '';
}

.bottomNav li a {
  color: white;
  text-decoration: none;
}

.bottomNav li a:hover {
  text-decoration: underline;
}

/*This hides the Microsoft Feedback and Mobile App line*/
div[class^="feedback"] {
  display: none;
}

:global {
  /*This hides the Microsoft Feedback and Mobile App line*/
}

:global div[class^="feedback"] {
  display: none;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
